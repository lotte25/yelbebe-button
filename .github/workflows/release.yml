name: CI/CD Release
on:
  push:
    tags:
      - v*
  workflow_dispatch:
jobs:
    release:
      runs-on: ubuntu-latest
      needs:
        - windows
        - linux
        - android
      steps:
        - uses: actions/checkout@v4
        - name: No longer draft
          run: |
            gh release edit "$(echo ${GITHUB_REF#refs/tags/})" --draft=false
          env:
            GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
    android:
        name: Build Android
        runs-on: ubuntu-latest
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4
              with:
                fetch-depth: 0

            - name: Set up Flutter
              uses: subosito/flutter-action@v2
              with:
                channel: stable
                cache: true

            - name: Build Android
              run: |
                flutter pub get
                dart pub global activate fastforge
                fastforge release --name android
              env:
                GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
    linux:
      name: Build Linux
      runs-on: ubuntu-latest
      steps:
        - name: Checkout repository
          uses: actions/checkout@v4
          with:
            fetch-depth: 0

        - name: Set up Flutter
          uses: subosito/flutter-action@v2
          with:
            channel: stable
            cache: true
        - run: flutter --version
        - run: flutter pub get

        - name: Install Dependencies
          run: |
            sudo apt-get update -y
            sudo apt-get install -y ninja-build libgtk-3-dev libfuse2 locate 
            sudo apt-get install -y appstream clang cmake desktop-file-utils fakeroot fuse gir1.2-appindicator3-0.1 libappindicator3-1 libappindicator3-dev libarchive-tools libgdk-pixbuf2.0-dev libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev libjsoncpp25 libjsoncpp-dev libmpv-dev libnotify-bin libnotify-dev libsecret-1-0 libsecret-1-dev libunwind-dev make mpv patchelf pkg-config python3-pip python3-setuptools strace tar xmlstarlet 
        
        - name: Install AppImage Tool
          run: |
            wget -O appimagetool "https://github.com/AppImage/appimagetool/releases/download/continuous/appimagetool-x86_64.AppImage"
            chmod +x appimagetool
            mv -v appimagetool /usr/local/bin/

        - name: Set up environment vars
          run: |
            TAG_NAME=$(echo ${GITHUB_REF#refs/tags/v})
            echo "SEMANTIC_VERSION=$TAG_NAME" >> $GITHUB_ENV
            echo "FLUTTER_VERSION=${TAG_NAME}+${GITHUB_RUN_NUMBER}" >> $GITHUB_ENV
            echo "GITHUB_REPOSITORY_NAME=${GITHUB_REPOSITORY#$GITHUB_REPOSITORY_OWNER/}" >> $GITHUB_ENV

        - name: Update version number
          run: |
            curl -sS https://webi.sh/yq | sh
            yq -i ".version |= \"${SEMANTIC_VERSION}+\"" pubspec.yaml
            yq -i '.version += strenv(GITHUB_RUN_NUMBER)' pubspec.yaml

        - name: Build and Release
          run: |
            flutter pub get
            dart pub global activate fastforge
            fastforge release --name linux
          env:
            GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
    windows: 
      name: Build Windows
      runs-on: windows-latest
      steps: 
        - name: Checkout repository
          uses: actions/checkout@v4
          with:
            fetch-depth: 0

        - name: Set up Flutter
          uses: subosito/flutter-action@v2
          with:
            channel: stable
            cache: true

        - name: Set up environment vars
          shell: bash
          run: |
            TAG_NAME=$(echo ${GITHUB_REF#refs/tags/v})
            echo "SEMANTIC_VERSION=$TAG_NAME" >> $GITHUB_ENV
            echo "FLUTTER_VERSION=${TAG_NAME}+${GITHUB_RUN_NUMBER}" >> $GITHUB_ENV
            echo "GITHUB_REPOSITORY_NAME=${GITHUB_REPOSITORY#$GITHUB_REPOSITORY_OWNER/}" >> $GITHUB_ENV
        
        - name: Update version number 
          shell: bash
          run: |
            choco install sed make yq -y
            yq -i ".version |= \"${SEMANTIC_VERSION}+\"" pubspec.yaml
            yq -i '.version += strenv(GITHUB_RUN_NUMBER)' pubspec.yaml

        - name: Build and Release
          run: |
            flutter pub get
            flutter config --enable-windows-desktop
            dart pub global activate fastforge
            fastforge release --name windows
          env:
            GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
